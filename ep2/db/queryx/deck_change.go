// Code generated by queryx, DO NOT EDIT.

package queryx

type DeckChange struct {
	ID        BigInt
	Name      String
	CreatedAt Datetime
	UpdatedAt Datetime
}

func (c *DeckChange) Changes() (columns []string, values []interface{}) {
	if c == nil {
		return columns, values
	}
	if c.ID.Set {
		columns = append(columns, "id")
		values = append(values, c.ID)
	}
	if c.Name.Set {
		columns = append(columns, "name")
		values = append(values, c.Name)
	}
	if c.CreatedAt.Set {
		columns = append(columns, "created_at")
		values = append(values, c.CreatedAt)
	}
	if c.UpdatedAt.Set {
		columns = append(columns, "updated_at")
		values = append(values, c.UpdatedAt)
	}
	return columns, values
}

func (c *DeckChange) SetID(id int64) *DeckChange {
	c.ID = NewBigInt(id)
	c.ID.Set = true
	return c
}

func (c *DeckChange) SetName(name string) *DeckChange {
	c.Name = NewString(name)
	c.Name.Set = true
	return c
}

func (c *DeckChange) SetNullableName(name *string) *DeckChange {
	c.Name = NewNullableString(name)
	c.Name.Set = true
	return c
}

func (c *DeckChange) SetCreatedAt(createdAt string) *DeckChange {
	c.CreatedAt = NewDatetime(createdAt)
	c.CreatedAt.Set = true
	return c
}

func (c *DeckChange) SetUpdatedAt(updatedAt string) *DeckChange {
	c.UpdatedAt = NewDatetime(updatedAt)
	c.UpdatedAt.Set = true
	return c
}
