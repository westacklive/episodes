// Code generated by queryx, DO NOT EDIT.

package queryx

import "fmt"

type UUIDColumn struct {
	Name  string
	Table *Table
}

func (t *Table) NewUUIDColumn(name string) *UUIDColumn {
	return &UUIDColumn{
		Table: t,
		Name:  name,
	}
}

func (c *UUIDColumn) NE(v string) *Clause {
	return &Clause{
		fragment: fmt.Sprintf("%s.%s <> ?", c.Table.Name, c.Name),
		args:     []interface{}{v},
	}
}
func (c *UUIDColumn) EQ(v string) *Clause {
	return &Clause{
		fragment: fmt.Sprintf("%s.%s = ?", c.Table.Name, c.Name),
		args:     []interface{}{v},
	}
}

func (c *UUIDColumn) Asc() string {
	return fmt.Sprintf("%s.%s ASC", c.Table.Name, c.Name)
}

func (c *UUIDColumn) Desc() string {
	return fmt.Sprintf("%s.%s DESC", c.Table.Name, c.Name)
}
